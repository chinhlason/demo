version: '3'

services:
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: app-keycloak
    environment:
      KC_DB: mysql
      KC_DB_URL: jdbc:mysql://keycloak-db:3306/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak

      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8080
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false

      KC_LOG_LEVEL: info
      KC_METRICS_ENABLED: true
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command: start-dev
    depends_on:
      - keycloak-db
    ports:
      - "8080:8080"
    restart: always

  keycloak-db:
    image: mysql
    container_name: app-keycloak-db
    environment:
      MYSQL_ROOT_PASSWORD: keycloak
      MYSQL_DATABASE: keycloak
      MYSQL_USER: keycloak
      MYSQL_PASSWORD: keycloak
    ports:
      - "3306:3306"
    volumes:
      - keycloak-db-data:/var/lib/mysql
    restart: always

  redis:
    image: redis
    container_name: app-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: always

  db:
    image: postgres
    container_name: app-db
    environment:
      POSTGRES_DB: db
      POSTGRES_USER: db
      POSTGRES_PASSWORD: db
    ports:
      - "5448:5432"
    restart: always

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: app-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    restart: always

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: app-kafka
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    restart: always

volumes:
  keycloak-db-data:
  redis-data: